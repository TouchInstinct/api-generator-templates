{%- import 'macroses/common.utils.twig' as utils -%}
{%- import 'macroses/class.utils.twig' as classUtils -%}

import LeadKit
import SwiftDate

enum ApiDateFormat: String, LeadKit.DateFormat, Singleton {

    {% for format in dateFormats -%}
    {%- set classType = classUtils.classType(format.type) -%}
    case {{ utils.dateFormatName(format.fieldName, classType) }} = "{{ format.dateFormat }}"
    {% endfor %}
    var swiftDateFormat: SwiftDate.DateFormat {
        return SwiftDate.DateFormat.custom(rawValue)
    }

}

final class ApiDateFormattingService: DateFormattingService {

    typealias DateFormatType = ApiDateFormat

    var currentRegion: Region = .Local()

    static let shared = ApiDateFormattingService()

    private init() {}

}
