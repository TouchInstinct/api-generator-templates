{% macro typeParameters(parameters, withConstraint) %}
    {%- import '../macroses/common.utils.twig' as utils -%}

    {%- if parameters is not empty -%}
    <
    {%- for typeParameter in parameters %}
        {{- utils.formatValueType(typeParameter) -}}{{- withConstraint ? ": Codable" : ""-}}{%- if not (loop.last) %}, {% endif %}
    {%- endfor -%}
    >
    {%- endif -%}
{% endmacro %}

{% macro classType(type) %}
    {%- import _self as self -%}
    {%- import '../macroses/common.utils.twig' as utils -%}

    {{- utils.escapeIfNeeded(type.baseTypeName) -}}{{- self.typeParameters(type.typeParameters, true) -}}
{% endmacro %}

{% macro parentClassType(parent, parentTypeParameters) %}
    {%- import _self as self -%}
    {%- import '../macroses/common.utils.twig' as utils -%}

    {%- if parent is not null %}
        {{- utils.escapeIfNeeded(parent.type.baseTypeName) -}}
    {%- else -%}
        Codable
    {%- endif -%}

    {{- self.typeParameters(parentTypeParameters, false) -}}
{% endmacro %}
